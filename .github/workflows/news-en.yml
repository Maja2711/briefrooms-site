#!/usr/bin/env python3
import datetime
from pathlib import Path

import feedparser

# =========================
# 1. ŹRÓDŁA RSS (EN)
# =========================
FEEDS = {
    "Politics / World": [
        "https://feeds.bbci.co.uk/news/world/rss.xml",
        "https://www.reuters.com/rssFeed/worldNews",
        "https://apnews.com/rss"  # ogólne, ale często pierwszy news = świat
    ],
    "Business / Economy": [
        "https://feeds.bbci.co.uk/news/business/rss.xml",
        "https://www.reuters.com/rssFeed/businessNews",
        "https://www.ft.com/?format=rss"  # może nie zawsze zadziała, ale zostawiamy
    ],
    "Sports": [
        "https://www.espn.com/espn/rss/news",
        "https://feeds.bbci.co.uk/sport/rss.xml?edition=uk"
    ],
}

# ile newsów na sekcję chcemy pokazać
LIMIT_PER_SECTION = 6

# gdzie zapisać – w Twoim repo:
OUTPUT_PATH = Path("en/news.html")


def fetch_first_entries(urls, limit):
    """Pobiera do `limit` wpisów z listy RSS-ów."""
    items = []
    for url in urls:
        try:
            feed = feedparser.parse(url)
            for e in feed.entries:
                title = getattr(e, "title", "").strip()
                link = getattr(e, "link", "").strip()
                if title and link:
                    items.append((title, link))
        except Exception:
            # jak któryś feed padnie – pomijamy, idziemy dalej
            continue

        if len(items) >= limit:
            break

    # utnij do limitu
    return items[:limit]


def build_html(sections):
    """Buduje gotowy HTML w stylu, jaki masz teraz na /en/news.html."""
    now = datetime.datetime.utcnow().strftime("%Y-%m-%d")
    # prosty HTML – taki jak masz w PL
    parts = []
    parts.append("""<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>News — BriefRooms</title>
  <meta name="description" content="Automatic daily digest: politics/world, business/economy, sports." />
  <link rel="icon" href="/assets/favicon.svg" />
  <link rel="stylesheet" href="/assets/site.css" />
</head>
<body>
  <header style="text-align:center; padding:26px 16px 8px">
    <h1>News</h1>
    <p class="sub">Last ~36 hours • """ + now + """</p>
  </header>
  <main style="max-width:980px; margin:0 auto; padding:0 16px 48px">
""")

    # sekcje
    for section_name, items in sections.items():
        parts.append(f"""
    <section class="card" style="margin:16px 0; border-radius:22px;">
      <h2>{section_name}</h2>
      <ul>
""")
        if items:
            for title, link in items:
                # każdy link w nowej linii
                parts.append(f'        <li><a href="{link}" target="_blank" rel="noopener">{title}</a></li>\n')
        else:
            parts.append("        <li>No headlines right now.</li>\n")

        parts.append("""      </ul>
    </section>
""")

    # stopka
    parts.append("""
    <p class="sub" style="margin-top:22px">
      Automatic digest (RSS). Links go to original publishers. Page is overwritten daily.
    </p>
  </main>
  <footer style="text-align:center; opacity:.6; padding:16px 12px 36px">© BriefRooms</footer>
</body>
</html>
""")
    return "".join(parts)


def main():
    sections_data = {}
    for section, urls in FEEDS.items():
        entries = fetch_first_entries(urls, LIMIT_PER_SECTION)
        sections_data[section] = entries

    html = build_html(sections_data)
    OUTPUT_PATH.parent.mkdir(parents=True, exist_ok=True)
    OUTPUT_PATH.write_text(html, encoding="utf-8")


if __name__ == "__main__":
    main()
